using cql ;

alter table users add city varchar;

insert into users(name,email,state,age,city) values('alex','alex@example.com','CA',27,'SFO');
insert into users(name,email,state,age,city) values('bob','bob@example.com','TX',29,'HS');
insert into users(name,email,state,age,city) values('mark','mark@example.com','TX',25,'HS');

CQL does not support super columns so we have to use cassandra-cli to use them

CREATE COLUMN FAMILY users_index
WITH comparator = UTF8Type
AND key_validation_class=UTF8Type AND
default_validation_class=UTF8Type AND
column_type = 'Super' AND
subcomparator=UTF8Type;

--Set super column values------
set users_index['TX']['HS']['bob']='bob'
set users_index['TX']['HS']['mark']='mark'
set users_index['CA']['SFO']['mark']='mark'

list users_index;

---Get Super Column Values---------

get users_index['TX']['HS']

-- Delete Super Column Values----------

del users_index['TX']['HS']

---Composite Columns-----

using cqlsh -3

drop table users;

create table users(
	name varchar,
	email varchar,
	state varchar ,
	city varchar,
	age int,
	PRIMARY KEY (state,name)
);

insert into users(name,email,state,age,city) values('alex','alex@example.com','CA',27,'SFO');
insert into users(name,email,state,age,city) values('bob','bob@example.com','TX',29,'HS');
insert into users(name,email,state,age,city) values('mark','mark@example.com','TX',25,'HS');

select * from users where state='TX';

select * from users where state='TX' and name='bob';

select * from users where state='TX' and city ='HS';  wont work because HS is not part of primary key

switch to cassandra-cli and run 'list users' to show how composite columns are stored.
--------Secondary Indexes------------
drop table users;
create table users(
	name varchar PRIMARY KEY,
	email varchar,
	state varchar ,
	city varchar,
	age int
);

insert into users(name,email,state,age,city) values('alex','alex@example.com','CA',27,'SFO');
insert into users(name,email,state,age,city) values('bob','bob@example.com','TX',29,'HS');
insert into users(name,email,state,age,city) values('mark','mark@example.com','TX',25,'HS');


select * from users where state='CA'; will throw an error
create index user_state on users(state);

select * from users where state='CA';  will work now
